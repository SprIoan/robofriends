{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","cardsArray","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","Cardlist","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.3fb4d6b3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return(\n    <div className='items-center-ns tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react'\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  // if (true) {\n  //   throw new Error('Nooooo!');\n  // }\n  const cardsArray = robots.map( (user,i) =>{\n    return (\n    <Card\n      key={i}\n      id={robots[i].id}\n      name={robots[i].name}\n      email={robots[i].email}\n      />\n    );\n  })\n  return(\n    <div>\n      {cardsArray}\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from 'react'\n\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return(\n    <div className='pa2'>\n      <input\n      className='pa3 ba b--green bg-lightest-blue'\n      type='search'\n      placeholder='search robots'\n      onChange= {searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox\n","import React from 'react';\n\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n    {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n      this.setState({ hasError: true})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops. That is not good.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react'\nimport CardList from '../components/Cardlist'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value})\n      }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({robots: users}));\n\n  }\n\n  render() {\n    const { robots, searchfield } = this.state\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    })\n\n    return !robots.length ?\n      <h1 className='tc f1'>Loading</h1> :\n    (\n      <div className=\"tc\">\n      <h1 className='f1'>RoboFriends</h1>\n      <SearchBox searchChange = {this.onSearchChange}/>\n      <Scroll>\n        <ErrorBoundry>\n          <CardList robots={filteredRobots} />\n        </ErrorBoundry>\n      </Scroll>\n      </div >\n    );\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}